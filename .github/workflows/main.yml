name: RetailPulse Frontend Web App CI Pipeline
env:
  NODE_VERSION: '22'          # Centralized Node.js version. Use the latest LTS version compatible with Angular 19

on:
  workflow_dispatch:
  push:
    branches: 
      - "main"
  # pull_request:
  #   branches: 
  #     - "main"
  #   types: 
  #     - opened
  #     - synchronize
  #     - reopened

jobs:
  web-app-unit-tests:
    name: Web App Unit Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v4

    - name: Set up Node.js for Angular 19
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }} 

    - name: Install Dependencies for RP Web App
      run: npm ci

    - name: Test RP Web App
      run: npm run test:ci

    - name: Upload Code Coverage Report
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-report
        path: coverage/


    - name: Build RP Web App
      run: npm run build:prod

  web-app-sonarqube-scan:
    name: Web App SonarQube Scan
    needs: [web-app-unit-tests]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

    # Analyze Frontend (Angular Project)
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install Dependencies for RP Web App
      run: npm ci

    - name: Analyze Frontend with SonarQube
      uses: SonarSource/sonarqube-scan-action@v5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  web-app-snyk-scan:
    name: Web App Snyk SCA Scan
    needs: [web-app-unit-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Authenticate with Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Run Snyk test (non-blocking)
        run: snyk test --all-projects --org=retailpulse --severity-threshold=low || true

      - name: Monitor project in Snyk dashboard
        run: snyk monitor --all-projects --org=retailpulse